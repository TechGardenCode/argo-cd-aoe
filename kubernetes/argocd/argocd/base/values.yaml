applicationSet:
  replicas: 2 # maybe not needed?
configs:
  cmp:
    create: true
    plugins:
      kustomize-helm:
        parameters:
          static:
            - name: NAMESPACE
              title: Namespace of the application
              required: true
              itemType: string
              collectionType: string
        generate:
          command: ["bash", "-c"]
          args:
            [
              'kustomize edit set namespace -- "$PARAM_NAMESPACE" && kustomize build --load-restrictor LoadRestrictionsNone --enable-helm --helm-command ''/home/argocd/cmp-server/config/command.sh''',
            ]
  params:
    application.namespaces: "*"
    # controller.diff.server.side: "true"
controller:
  replicas: 1 # maybe not needed?
global:
  domain: foo.kian.sh
redis-ha:
  enabled: true
repoServer:
  replicas: 2
  extraContainers:
    - name: kustomize-helm
      command: ["/var/run/argocd/argocd-cmp-server"]
      image: |-
        {{ default .Values.global.image.repository .Values.repoServer.image.repository }}:{{ default (include "argo-cd.defaultTag" .) .Values.repoServer.image.tag }}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: kustomize-helm.yaml
          name: argocd-cmp-cm
        - name: argocd-kustomize-helm-workaround
          mountPath: /home/argocd/cmp-server/config/command.sh
          subPath: command.sh
  volumes:
    - name: argocd-kustomize-helm-workaround
      configMap:
        name: argocd-kustomize-helm-workaround
        defaultMode: 0777
    - configMap:
        name: argocd-cmp-cm
      name: argocd-cmp-cm
server:
  replicas: 2
  service:
    type: LoadBalancer
  ingress:
    enabled: true
    ingressClassName: nginx-private
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-production"
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    tls: true
